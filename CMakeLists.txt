# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

# Regenerate CMakeLists.txt automatically in the root project
set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr
	include(cmkr.cmake OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)
endif()

# Create a configure-time dependency on cmake.toml to improve IDE support
if(CMKR_ROOT_PROJECT)
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

# Options
option(PYTHON_BINDINGS OFF)

project(libx86)

include(FetchContent)

message(STATUS "Fetching triton...")
FetchContent_Declare(
	triton
	GIT_REPOSITORY
		https://github.com/JonathanSalwan/Triton.git
)
FetchContent_MakeAvailable(triton)

# Target libx86
set(CMKR_TARGET libx86)
set(libx86_SOURCES "")

list(APPEND libx86_SOURCES
	"src/disasm.cpp"
	"src/emulator.cpp"
	"include/disasm.hpp"
	"include/emulator.hpp"
)

list(APPEND libx86_SOURCES
	cmake.toml
)

set(CMKR_SOURCES ${libx86_SOURCES})
add_library(libx86 SHARED)

if(libx86_SOURCES)
	target_sources(libx86 PRIVATE ${libx86_SOURCES})
endif()

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${libx86_SOURCES})

target_compile_features(libx86 PUBLIC
	cxx_std_20
)

target_include_directories(libx86 PUBLIC
	include
)

target_link_libraries(libx86 PUBLIC
	triton
)

unset(CMKR_TARGET)
unset(CMKR_SOURCES)

